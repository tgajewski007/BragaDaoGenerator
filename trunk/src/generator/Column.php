<?php
namespace braga\daogenerator\generator;
/**
 * Created on 10-03-2013 17:04:07
 * author Tomasz Gajewski
 * package frontoffice
 * error prefix
 */
class Column
{
	// -------------------------------------------------------------------------
	protected $name = null;
	protected $classFieldName = null;
	protected $type = null;
	protected $size = null;
	protected $scale = null;
	protected $pk = false;
	protected $autoGenerated = false;
	// -------------------------------------------------------------------------
	function __construct()
	{
		$this->setType(ColumnType::VARCHAR);
		$this->setSize(255);
	}
	// -------------------------------------------------------------------------
	public function setName($name)
	{
		$this->name = $name;
	}
	// -------------------------------------------------------------------------
	static function import(\DOMElement $c)
	{
		$t = new self();
		$t->setName($c->getAttribute("name"));
		$t->setClassFieldName($c->getAttribute("classFieldName"));
		$t->setType($c->getAttribute("type"));
		$t->setSize($c->getAttribute("size"));
		$t->setScale($c->getAttribute("scale"));
		$t->setPK($c->getAttribute("pk") == "true");
		$t->setAutoGenerate((bool)$c->getAttribute("autoGeneratedValue"));
		return $t;
	}
	// -------------------------------------------------------------------------
	public function export(\DOMElement $c)
	{
		$c->setAttribute("name", $this->getName());
		$c->setAttribute("classFieldName", $this->getClassFieldName());
		$c->setAttribute("type", $this->getType());
		$c->setAttribute("pk", var_export($this->isPK(), true));
		$c->setAttribute("autoGeneratedValue", var_export($this->isAutoGenerated(), true));
		if(!is_null($this->getSize()))
		{
			$c->setAttribute("size", $this->getSize());
		}
		if(!is_null($this->getScale()))
		{
			$c->setAttribute("scale", $this->getScale());
		}
	}
	// -------------------------------------------------------------------------
	public function setClassFieldName($classFieldName)
	{
		$this->classFieldName = $classFieldName;
	}
	// -------------------------------------------------------------------------
	public function setType($type)
	{
		$this->type = $type;
		if(255 == $this->getSize())
		{
			if($this->type == ColumnType::NUMBER)
			{
				$this->setSize(22);
			}
			elseif($this->type == ColumnType::DATE)
			{
				$this->setSize(null);
			}
			elseif($this->type == ColumnType::DATETIME)
			{
				$this->setSize(null);
			}
			elseif($this->type == ColumnType::TEXT)
			{
				$this->setSize(null);
			}
		}
	}
	// -------------------------------------------------------------------------
	public function setSize($size)
	{
		$this->size = $size;
	}
	// -------------------------------------------------------------------------
	public function setScale($scale)
	{
		$this->scale = $scale;
	}
	// -------------------------------------------------------------------------
	public function setPK($pk = true)
	{
		$this->pk = $pk;
	}
	// -------------------------------------------------------------------------
	public function setAutoGenerate($auto = true)
	{
		$this->autoGenerated = $auto;
	}
	// -------------------------------------------------------------------------
	public function getName()
	{
		return $this->name;
	}
	// -------------------------------------------------------------------------
	public function getClassFieldName()
	{
		return $this->classFieldName;
	}
	// -------------------------------------------------------------------------
	public function getType()
	{
		return $this->type;
	}
	// -------------------------------------------------------------------------
	public function getSize()
	{
		return $this->size;
	}
	// -------------------------------------------------------------------------
	public function getScale()
	{
		return $this->scale;
	}
	// -------------------------------------------------------------------------
	public function isPK()
	{
		return $this->pk;
	}
	// -------------------------------------------------------------------------
	public function isAutoGenerated()
	{
		return $this->autoGenerated;
	}
	// -------------------------------------------------------------------------
	public function getPHPType()
	{
		switch($this->getType())
		{
			case ColumnType::CHAR:
			case ColumnType::DATE:
			case ColumnType::DATETIME:
			case ColumnType::VARCHAR:
			case ColumnType::TEXT:
				return "string";
				break;
			case ColumnType::NUMBER:
				return "int";
				break;
		}
	}
	// -------------------------------------------------------------------------
	public function getKey()
	{
		return $this->getName();
	}
	// -------------------------------------------------------------------------
	public static function convertFieldNameToClassName($fieldName)
	{
		$classFieldName = "";
		foreach((explode("_", strtolower($fieldName))) as $v)
		{
			$classFieldName .= ucfirst($v);
		}
		$classFieldName = lcfirst($classFieldName);
		if(strtolower(substr($classFieldName, 0, 2)) == "id")
		{
			$classFieldName = "id" . ucfirst(substr($classFieldName, 2));
		}
		return $classFieldName;
	}
	// -------------------------------------------------------------------------
}
?>